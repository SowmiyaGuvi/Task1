Blog on Objects and its internal representation in JavaScript


Objects, in JavaScript, is itâ€™s most important data-type and forms the building blocks for modern JavaScript. 
These objects are quite different from JavaScriptâ€™s primitive data-types(Number, String, Boolean, null, undefined and symbol)
in the sense that while these primitive data-types all store a single value each (depending on their types).
Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types. 
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. 
That reference or pointer points to the location in memory where the object is stored. The variables donâ€™t actually store the value.
Objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of â€œkey: valueâ€ pairs. 
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object. 
For Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateName, etc.

Objects and Properties
A JavaScript object has properties associated with it. A property of an object can be explained as a variable that is attached to the object. Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects. The properties of an object define the characteristics of the object. You access the properties of an object with a simple dot-notation:

SYNTAX : objectName.propertyName